ctar() {
        cd /home/srk/beeliner_sant/drivers/firmware/
	source /trees/sw/peregrine/build/setup.sh
	make clean
	export TARGET=AR900B
	export TARGET_VER=1
	export FPGA_FLAG=1
	export WORKAREA=`pwd`
	echo "********** compiling beeliner target for M2M platform ***********"
	echo $TARGET; echo $TARGET_VER; echo $FPGA_FLAG
	sleep 2
	make

}

cpf() {
	scp -r /home/srk/beeliner_sant/drivers/firmware/target/.output nick@10.234.15.147:/home/nick/
}
se () {
	home=`pwd`
	echo $home
	echo "*****setenv cscope*****"
	export CSCOPE_DB=$home/cscope.out
	cd $home
	source .p4config
	p4 login
	echo "*****setenv p4*****"
	export WORK_SPACE_HOME=$home
	echo "*****setenv workspace*****"

}

setcscope(){
	home=`pwd`
	cd $home
	echo $home
	rm -f ./cscope.files
	find $home -name '*.c' -o -name '*.h' > ./cscope.files
	cscope -b -q -k
}

ffile(){
	find . -name $1
}

vimb(){
	source ~/.bash_aliases
	vim ~/.bash_aliases
}

cs() {
	cscope -d
}

sba() {
	source ~/.bash_aliases

}

vba() {
	vim ~/.bash_aliases
}

fvim () {
	vim $(find . -name $1)
}

kk (){
	cd $WORK_SPACE_HOME 
}


# beeliner specific aliases
stats1() {
	while true; do sleep 1; iwpriv ath0 txrx_fw_stats 1 ; dmesg -c | grep queued ; done;
}

memdump() {
	athdiag --read --address=0x400000 --length=0x60000 --file=dram.dump
	mkdir /tmp/dump
	cp dram.dump /tmp/dump/
	gen_peregrine_core_dump
	core_file_gen /tmp/core.txt
}

export GIT_EDITOR=vim
alias wifi_local='rmmod rtl8192se'
#WORK_SPACE_HOME="/home/thirumalai/beeliner_c1/"


alias home='cd $WORK_SPACE_HOME/drivers'
alias hc='cd $WORK_SPACE_HOME/build;make BOARD_TYPE=x86-host-small driver_build TARGET_TYPE=AR900B'
alias b='cd $WORK_SPACE_HOME/build'
alias fw='cd $WORK_SPACE_HOME/drivers/firmware'
alias fwbin='cd $WORK_SPACE_HOME/drivers/firmware/Firmware.root_drivers.9999/target/AR900B/fpga1'

setup() {
echo "copying fw to local.."
cp $WORK_SPACE_HOME/drivers/host/support/fakeBoardData_AR6004.bin /lib/firmware/
cp $WORK_SPACE_HOME/drivers/firmware/Firmware.root_drivers.9999/target/AR900B/fpga1/bin/athwlan.bin /lib/firmware/

#cp $WORK_SPACE_HOME/drivers/target/.output/AR900B/fpga.1/bin/athwlan.bin /lib/firmware/
#cp $WORK_SPACE_HOME/perf_pwr_offload/drivers/target/.output/AR900B/fpga.1/bin/utf.bin /lib/firmware/

cp $WORK_SPACE_HOME/drivers/firmware/Firmware.root_drivers.9999/target/AR900B/fpga1/bin/utf.bin /lib/firmware/

echo "copying fw to remote.."
#scp $WORK_SPACE_HOME/perf_pwr_offload/drivers/Firmware.root_drivers.9999/target/AR900B/fpga1/bin/utf.bin ladmin@10.242.192.121:/tmp/
#scp $WORK_SPACE_HOME/perf_pwr_offload/drivers/Firmware.root_drivers.9999/target/AR900B/fpga1/bin/athwlan.bin ladmin@10.242.192.121:/tmp/
#scp $WORK_SPACE_HOME/perf_pwr_offload/drivers/host/support/fakeBoardData_AR6004.bin ladmin@10.242.192.121:/tmp/

echo "copying .ko to remote.."
scp /usr/local/lib/*.ko root@CHE-ITLOANER60-lin:/usr/local/lib/
}


load(){

insmod /usr/local/lib/adf.ko
insmod /usr/local/lib/asf.ko
insmod /usr/local/lib/ath_hal.ko
insmod /usr/local/lib/ath_rate_atheros.ko
insmod /usr/local/lib/ath_spectral.ko
insmod /usr/local/lib/ath_dev.ko
insmod /usr/local/lib/ath_dfs.ko
insmod /usr/local/lib/umac.ko
insmod /usr/local/lib/ath_pktlog.ko

}

unload(){

rmmod ath_pktlog
rmmod umac
rmmod ath_dev
rmmod ath_spectral
rmmod ath_rate_atheros
rmmod ath_hal
rmmod ath_dfs
rmmod asf
rmmod adf

}

rescan(){
sudo echo 1 > /sys/bus/pci/rescan
lspci | grep Ath
}

rl(){
sudo rmmod ath_pktlog
sudo rmmod umac
sudo rmmod ath_dev
sudo rmmod ath_spectral
sudo rmmod ath_rate_atheros
sudo rmmod ath_hal
sudo rmmod ath_dfs
sudo rmmod asf
sudo rmmod adf
sudo insmod /usr/local/lib/adf.ko
sudo insmod /usr/local/lib/asf.ko
sudo insmod /usr/local/lib/ath_hal.ko
sudo insmod /usr/local/lib/ath_rate_atheros.ko
sudo insmod /usr/local/lib/ath_spectral.ko
sudo insmod /usr/local/lib/ath_dev.ko
sudo insmod /usr/local/lib/ath_dfs.ko
sudo insmod /usr/local/lib/umac.ko
sudo insmod /usr/local/lib/ath_pktlog.ko
}

fwc(){
cd $WORK_SPACE_HOME/drivers/firmware/
sudo rm -rf Firmware.root_firmware.9999*
sudo ./support/makesdk
}


# auto routine to compile fw, host for tot build
bee_tot(){
tot_home=/home/srk/beeliner_tot/
cd $tot_home
se
p4 sync
fwc
sudo bash
hc
}

# AP148 commands #
ap148(){
	sudo miniterm.py /dev/ttyUSB0 -b 115200
}



######### Lesser known commands ###########

print_cmd(){
	echo "	1. sudo!! : Forgot to run a command with sudo? You need not re-write the whole command, just type “sudo!!” and the last command will run with sudo.
		2. Python -m SimpleHTTPServer : Creates a simple web page for the current working directory over port 8000.
		3. mtr : A command which is a combination of ‘ping’ and ‘traceroute’ command.
		4. Ctrl+x+e : This key combination fires up, an editor in the terminal, instantaneously.
		5. nl : Outputs the content of text file with lines Numbered.
		6. shuf : Randomly selects line/file/folder from a file/folder.
		7. ss : Outputs Socket Statistics.
		8. Last: Want to know history of last logged in users? This command comes to rescue here.
		9. curl ifconfig.me : Shows machine’s external IP Address.
		10. tree : Prints files and folders in tree like fashion, recursively.
		11. Pstree : Prints running processes with child processes, recursively.
		12. <space> command : A space before a bash command, is not recorded in history.
		13. stat : Shows the status information of a file as well as of a file system.
		14. <alt>. And <esc>. : A tweak which put the last command argument at prompt, in the order of last entered command, appearing first.
		15. Pv : outputs simulating text, similar to hollywood movies.
		16. Mount | column -t : Lists mounted file system, in nice formatting with specification.
		17. Ctrl + l: clear shell prompt, instantaneously.
		18. curl -u gmail_id –silent “https://mail.google.com/mail/feed/atom” | perl -ne ‘print “\t” if //; print “$2\n” if /(.*)/;’. This simple scripts, opens up, unread mail of an user, in the terminal itself.
		19. screen : Detach and Reattach, long running process from a session.
		20. file : Outputs information, regarding types of file.
		21. id : Print User and Group Id.
		22. ^foo^bar : Run last command with modification, without the need of rewriting the whole command again.
		23. > file.txt : Flush the content of a text file, in a single go, from the command prompt.
		24. at : Run a particular command, time based.
		25. du -h –max-depth=1 Command : Outputs the size of all the files and folders within current folder, in human readable format.
		26. expr : Solve simple mathematical calculations from the terminal.
		27. look: Check for an English word, from the dictionary, in case of confusion, right from the shell.
		28. yes : continues to print a sting, till interrupt instruction is given.
		29. factor: Gives all the possible factors of a decimal number.
		30. ping -i 60 -a IP_address : Pings the provided IP_address, and gives audible sound when host comes alive.
		31. tac : Prints content of a file, in reverse order.
		32. strace : A debugging tool.
		33. disown -a && exit Command : Run a command in background, even after terminal session is closed.
		34. getconf LONG_BIT Command : Output Machine Architecture, very clearly.
		35. while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done & : The script outputs date and time on the top right corner of shell/ terminal.
		36. convert : converts the output of a command in picture, automatically.
		37. watch -t -n1 “date +%T|figlet” : Show animated digital clock at the prompt.
		38. host and dig : DNS lookup utility.
		39. dstat : Generates statistics regarding system resource.
		40. bind -p : Shows all the shortcuts available in Bash.
		41. Touch /forcefsck : Force file-system check on next boot.
		42. lsb_release : Prints distribution specification information.
		43. nc -ZV localhost port_number : Check if a specific port is open or not.
		44. curl ipinfo.io : Outputs Geographical Information, regarding an ip_address.
		45. find .-user xyz : Lists all file owned by user ‘xyz’
		46. apt-get build-dep package_name: Build all the dependency, automatically while installing any specific package.
		47. lsof -iTCP:80 -sTCP:LISTEN. The script, outputs all the service/process using port 80.
		48. find -size +100M : This command combination, Lists all the files/folders the size of which is 100M or more.
		49. pdftk : A nice way to concatenate a lot of pdf files, into one.
		50. ps -LF -u user_name : Outputs Processes and Threads of a user.
		51. Startx — :1 (This command creates another new X session).

		"
}
